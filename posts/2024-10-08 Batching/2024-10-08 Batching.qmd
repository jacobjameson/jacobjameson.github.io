---
title: "My Paper Summary: A Scrollytelling Experience"
format: 
  html:
    css: scrolly.css
    include-in-header:
      - text: |
          <script src="https://unpkg.com/scrollama"></script>
---

```{r setup, include=FALSE}
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(fig.path = "images/")
```

<div class="scroll-container">
<div class="scroll-text">
<section id="intro">
<h2>Introduction</h2>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
</section>
<section id="method">
<h2>Methodology</h2>
<p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
</section>
<section id="results">
<h2>Results</h2>
<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.</p>
</section>
<section id="conclusion">
<h2>Conclusion</h2>
<p>Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit.</p>
</section>
</div>
<div class="scroll-graphic">
<div id="plot"></div>
</div>
</div>

```{r generate-plots, echo=FALSE}
# Generate some sample data
set.seed(123)
data <- data.frame(
x = rep(1:4, each = 25),
y = rnorm(100, mean = 5, sd = 2)
)

# Create plots for each section
plot_intro <- ggplot(data, aes(x = factor(x), y = y)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Introduction", x = "Group", y = "Value")

plot_method <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Methodology", x = "X", y = "Y")

plot_results <- ggplot(data, aes(x = y)) +
geom_histogram(bins = 20, fill = "skyblue", color = "black") +
theme_minimal() +
labs(title = "Results", x = "Value", y = "Count")

plot_conclusion <- ggplot(data, aes(x = factor(x), y = y)) +
geom_violin() +
theme_minimal() +
labs(title = "Conclusion", x = "Group", y = "Value")

# Save plots
ggsave("images/plot_intro.png", plot_intro, width = 6, height = 4)
ggsave("images/plot_method.png", plot_method, width = 6, height = 4)
ggsave("images/plot_results.png", plot_results, width = 6, height = 4)
ggsave("images/plot_conclusion.png", plot_conclusion, width = 6, height = 4)
```

<script>
// Initialize scrollama
var scroller = scrollama();

// Setup the scroller
scroller
.setup({
step: '.scroll-text section',
offset: 0.5,
debug: false
})
.onStepEnter(response => {
// Update visualization based on current step
var plotDiv = document.getElementById('plot');
switch(response.index) {
case 0:
plotDiv.innerHTML = '<img src="images/plot_intro.png" alt="Introduction Plot">';
break;
case 1:
plotDiv.innerHTML = '<img src="images/plot_method.png" alt="Methodology Plot">';
break;
case 2:
plotDiv.innerHTML = '<img src="images/plot_results.png" alt="Results Plot">';
break;
case 3:
plotDiv.innerHTML = '<img src="images/plot_conclusion.png" alt="Conclusion Plot">';
break;
}
});

// Resize event
window.addEventListener('resize', scroller.resize);
</script>
